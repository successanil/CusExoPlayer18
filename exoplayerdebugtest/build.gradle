plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.relsellglobal.android.exoplayer2.demo"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // dependency for exoplayer

    def exoplayer_version = "2.18.0"

    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"

// for core support in exoplayer.

    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"

// for adding dash support in our exoplayer.

    implementation "com.google.android.exoplayer:exoplayer-dash:$exoplayer_version"

// for adding hls support in exoplayer.

    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer_version"

// for smooth streaming of video in our exoplayer.
    implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$exoplayer_version"

// for generating default ui of exoplayer

    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"

    implementation 'com.google.android.material:material:' + androidxMaterialVersion

    implementation project(modulePrefix + 'extension-cronet')

    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion

    // dagger
    def dagger_version= '2.42'
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

}
repositories {
    mavenCentral()
}